/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MITh
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define NAV 1
#define NUM 2
#define SYM 3
#define FUN 4
#define MSC 5
#define MOU 6
#define WIN 7
#define MOD 8
&lt { quick_tap_ms = <300>; };
&mt { quick_tap_ms = <300>; };
/ {
    macros {
        mouse_on: mouse_on {
            label = "mouse_on";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &tog MOU>
                , <&kp LG(LS(LA(N1)))>
                ;
        };

        mouse_off: mouse_off {
                    label = "mouse_off";
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                        = <&macro_tap &tog MOU>
                        , <&kp LG(LS(LA(N2)))>
                        ;
                };

        lang: lang {
                    label = "lang";
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                        = <&kp CAPS>
                        , <&kp LG(LS(LA(N3)))>
                        ;
                };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// |  -   |  ESC    |   Q   |   W   |   E   |   R   |   T   |                  |   Y   |   U   |     I     |    O    |    P    |   [    |  -  |
//        |  TAB    |   A   |   S   |   D   |   F   |   G   |                  |   H   |   J   |     K     |    L    |    ;    |    '   |
//        |  LCTL   |   Z   |   X   |   C   |   V   |   B   |                  |   N   |   M   |     ,     |    .    |    /    |    ]   |
//                                       | SHFT |  SPACE | RSE |            | LWR |SFT/BSPC|RAISE|
                        bindings = <
//         0        1       2            3            4             5               5          4           3           2           1         0
    &trans &mouse_on    &kp Q   &kp W        &kp E        &kp R         &kp T           &kp Y      &kp U       &kp I       &kp O       &kp P     &kp LBKT &trans
           &lang &mt LCTRL A   &mt LSHFT S  &mt LALT D   &mt LCTRL F   &mt LGUI G      &mt RGUI H &mt RCTRL J &mt RALT K  &mt RSHFT L &kp SEMI  &kp SQT
           &mo MOD   &lt NUM Z   &kp X        &kp C        &kp V         &kp B           &kp N      &kp M       &kp COMMA   &kp DOT     &kp FSLH  &lt MOD RBKT
                                     &lt MSC ESC  &lt FUN SPACE  &lt WIN TAB                &lt NUM RET &lt NAV BSPC &lt SYM DEL
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// |  -   |   _     |  F1   |   F2  |   F3  |   ;   |   :   |                  |   !   |   "   |    Э     |   Х   |   Ъ   | F11 |  -  |
//        |   =     |  1    |   2   |   3   |   4   |   5   |                  |   6   |   7   |    8     |   9   |   0   | F12 |
//        |   +     |  !    |   @   |   #   |   $   |   %   |                  |   ^   |   &   |    *     |   (   |   )   |  -  |
//                                  |  GUI  |       |  GUI  |                  |  ENT  |       |  ALT  |
                        bindings = <
//         0        1       2         3        4         5              5         4        3        2         1       0
   &trans &none     &none   &none     &none    &none     &none          &kp PG_UP &kp HOME &kp UP   &kp END   &kp INS &kp PSCRN  &trans
          &none     &none   &kp LSHFT &kp LALT &kp LCTRL &kp LGUI       &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &none   &none
          &none     &none   &none     &none    &none     &none          &none     &none   &none &none     &none   &none
                                    &none &none &none            &none &none &none
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// |     |    A+T        |   C+q    |   C+w   |   C+e   |   A+4   |    -    |                  | INS| BSPC| DEL| PGUP| SCLK| CLCK|     |
//       |    C+A+T      |   C+a    |    |    |   TAB   |     .   |    ,    |                  | LEFT | DOWN|  UP | RGHT| INS | APP |
//       |      @        |    ~     |   C+x   |   C+c   |   C+v   |   A+S   |                  | HOME| PGDN | PGUP| END| PAUS|     |
//                                            |   ADJ   |         |         |                  | ADJ |     |     |
                        bindings = <
//         0        1        2       3      4      5                 5         4         3        2         1       0
   &trans &none    &kp GRAVE &kp N7  &kp N8  &kp N9 &kp BSLH         &none     &none     &none    &none     &none   &none &trans
          &none    &none     &kp N4  &kp N5  &kp N6 &none            &kp RGUI  &kp RCTRL &kp RALT &kp RSHFT &none   &none
          &none    &none     &kp N1  &kp N2  &kp N3 &none            &none     &none     &none    &none     &none   &none
                                   &kp MINUS &kp N0 &kp EQUAL        &none &none &none
                        >;
                };
                sym_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
//         0        1        2         3         4         5                5         4         3        2         1       0
   &trans &none    &kp TILDE &kp AMPS  &kp STAR  &kp LPAR  &kp PIPE         &none     &none     &none    &none     &none   &none &trans
          &none    &none     &kp DLLR  &kp PRCNT &kp CARET &none            &kp RGUI  &kp RCTRL &kp RALT &kp RSHFT &none   &none
          &none    &none     &kp EXCL  &kp AT    &kp HASH  &none            &none     &none     &none    &none     &none   &none
                                   &kp UNDER &kp RPAR &kp PLUS        &none &none &none
                        >;
                };

                fun_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
//         0                 1                     2       3      4      5                  5         4         3        2         1         0
   &trans &none              &kp LG(F6)            &kp F7  &kp F8 &kp F9 &kp F12            &none     &none     &none    &none     &none &none &trans
          &kp LC(LA(LEFT))   &kp LC(LA(RIGHT))     &kp F4  &kp F5 &kp F6 &kp F11            &kp RGUI  &kp RCTRL &kp RALT &kp RSHFT &none     &none
          &none              &none                 &kp F1  &kp F2 &kp F3 &kp F10            &none     &none     &none    &none     &none     &none
                                   &none &none &none               &none &none &none
                        >;
                };

                music_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
//         0        1        2            3          4             5            5         4         3        2         1         0
   &trans &none     &none    &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP  &none        &none     &none     &none    &none     &none     &none &trans
          &none     &none    &kp C_PREV   &kp C_PP   &kp C_NEXT    &none        &none     &none     &none    &none     &none     &none
          &none     &none    &none        &kp C_BRI_DN  &kp C_BRI_UP &none &none     &none     &none    &none     &none     &none
                                   &none &none &none              &none &none &none
                        >;
                };

                mouse_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
//         0        1        2              3              4               5    |5         4              3              2               1         0
   &trans &mouse_off &none    &mkp LCLK      &mmv MOVE_UP   &mkp RCLK       &none &none     &mkp LCLK      &mmv MOVE_UP   &mkp RCLK       &none     &none &trans
          &none      &none    &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &none &none     &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &none     &none
          &none      &none    &none          &mkp MCLK      &none           &none &none     &none          &mkp MCLK      &none           &none     &none
                                   &none &none &none              &none &none &none
                        >;
                };

                moving_windows_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// |     |    A+T        |   C+q    |   C+w   |   C+e   |   A+4   |    -    |                  | INS| BSPC| DEL| PGUP| SCLK| CLCK|     |
//       |    C+A+T      |   C+a    |    |    |   TAB   |     .   |    ,    |                  | LEFT | DOWN|  UP | RGHT| INS | APP |
//       |      @        |    ~     |   C+x   |   C+c   |   C+v   |   A+S   |                  | HOME| PGDN | PGUP| END| PAUS|     |
//                                            |   ADJ   |         |         |                  | ADJ |     |     |
//
                        bindings = <
//         0        1        2       3      4      5                 5         4         3        2         1       0
   &trans &none    &none     &kp LG(N7)  &kp LG(N8)  &kp LG(N9) &none         &none     &none     &none    &none     &none   &none &trans
          &none    &none     &kp LG(N4)  &kp LG(N5)  &kp LG(N6) &none            &none     &none     &none    &none     &none   &none
          &none    &none     &kp LG(N1)  &kp LG(N2)  &kp LG(N3) &kp LSHFT        &none     &none     &none    &none     &none   &none
                                   &none &none &none        &none &none &none
                        >;
                };
        };

                modifier_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// |     |    A+T        |   C+q    |   C+w   |   C+e   |   A+4   |    -    |                  | INS| BSPC| DEL| PGUP| SCLK| CLCK|     |
//       |    C+A+T      |   C+a    |    |    |   TAB   |     .   |    ,    |                  | LEFT | DOWN|  UP | RGHT| INS | APP |
//       |      @        |    ~     |   C+x   |   C+c   |   C+v   |   A+S   |                  | HOME| PGDN | PGUP| END| PAUS|     |
//                                            |   ADJ   |         |         |                  | ADJ |     |     |
//   &lt NUM RET &lt NAV BSPC &lt SYM DEL
                        bindings = <
//         0        1        2         3        4          5      5         4         3        2         1       0
   &trans &none    &none     &none     &none    &none     &none   &none   &none     &none     &none    &none     &none   &none &trans
          &none    &none     &none     &none    &none     &none   &none   &none     &none     &none    &none     &none   &none
          &none    &none     &kp RET   &kp BSPC &kp DEL   &none   &none   &kp ESC   &kp SPACE &kp TAB  &none     &none   &none
                                   &none &none &none        &none &none &none
                        >;
                };
        };
};
