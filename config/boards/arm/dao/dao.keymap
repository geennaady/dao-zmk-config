/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MITh
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define NAV 1
#define NUM 2
#define SYM 3
#define FUN 4
#define MSC 5

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// |  -   |  ESC    |   Q   |   W   |   E   |   R   |   T   |                  |   Y   |   U   |     I     |    O    |    P    |   [    |  -  |
//        |  TAB    |   A   |   S   |   D   |   F   |   G   |                  |   H   |   J   |     K     |    L    |    ;    |    '   |
//        |  LCTL   |   Z   |   X   |   C   |   V   |   B   |                  |   N   |   M   |     ,     |    .    |    /    |    ]   |
//                                       | SHFT |  SPACE | RSE |            | LWR |SFT/BSPC|RAISE|
                        bindings = <
//         0        1       2            3            4             5               5          4           3           2           1         0
    &trans &none    &kp Q   &kp W        &kp E        &kp R         &kp T           &kp Y      &kp U       &kp I       &kp O       &kp P     &kp LBKT &trans
           &kp CAPS &kp A   &mt LSHFT S  &mt LALT D   &mt LCTRL F   &mt LGUI G      &mt RGUI H &mt RCTRL J &mt RALT K  &mt RSHFT L &kp SEMI  &kp SQT
           &none    &kp Z   &kp X        &kp C        &kp V         &kp B           &kp N      &kp M       &kp COMMA   &kp DOT     &kp FSLH  &kp RBKT
                                     &lt FUN ESC  &lt MSC SPACE  &lt NUM TAB                &lt NUM RET &lt SYM BSPC &lt NAV DEL
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// |  -   |   _     |  F1   |   F2  |   F3  |   ;   |   :   |                  |   !   |   "   |    Э     |   Х   |   Ъ   | F11 |  -  |
//        |   =     |  1    |   2   |   3   |   4   |   5   |                  |   6   |   7   |    8     |   9   |   0   | F12 |
//        |   +     |  !    |   @   |   #   |   $   |   %   |                  |   ^   |   &   |    *     |   (   |   )   |  -  |
//                                  |  GUI  |       |  GUI  |                  |  ENT  |       |  ALT  |
                        bindings = <
//         0        1       2       3      4      5                     5         4        3        2         1       0
   &trans &none     &none   &none     &none    &none     &none          &kp PG_UP &kp HOME &kp UP   &kp END   &kp INS &none &trans
          &none     &none   &kp LSHFT &kp LALT &kp LCTRL &kp LGUI       &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &none   &none
          &none     &none   &none     &none    &none     &none          &none     &none    &none    &none     &none   &none
                                    &kp RET &kp BSPC &kp DEL            &none &none &none
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// |     |    A+T        |   C+q    |   C+w   |   C+e   |   A+4   |    -    |                  | INS| BSPC| DEL| PGUP| SCLK| CLCK|     |
//       |    C+A+T      |   C+a    |    |    |   TAB   |     .   |    ,    |                  | LEFT | DOWN|  UP | RGHT| INS | APP |
//       |      @        |    ~     |   C+x   |   C+c   |   C+v   |   A+S   |                  | HOME| PGDN | PGUP| END| PAUS|     |
//                                            |   ADJ   |         |         |                  | ADJ |     |     |
                        bindings = <
//         0        1        2       3      4      5                 5         4         3        2         1       0
   &trans &none    &kp GRAVE &kp N7  &kp N8  &kp N9 &kp BSLH         &none     &none     &none    &none     &none   &none &trans
          &none    &none     &kp N4  &kp N5  &kp N6 &kp LGUI            &kp RGUI  &kp RCTRL &kp RALT &kp RSHFT &none   &none
          &none    &none     &kp N1  &kp N2  &kp N3 &kp LSHFT            &none     &none     &none    &none     &none   &none
                                   &kp MINUS &kp N0 &kp EQUAL        &none &none &none
                        >;
                };
                sym_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
//         0        1        2         3         4         5                5         4         3        2         1       0
   &trans &none    &kp TILDE &kp AMPS  &kp STAR  &kp LPAR  &kp PIPE         &none     &none     &none    &none     &none   &none &trans
          &none    &none     &kp DLLR  &kp PRCNT &kp CARET &none            &kp RGUI  &kp RCTRL &kp RALT &kp RSHFT &none   &none
          &none    &none     &kp EXCL  &kp AT    &kp HASH  &none            &none     &none     &none    &none     &none   &none
                                   &kp UNDER &kp RPAR &kp PLUS        &none &none &none
                        >;
                };

                fun_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
//         0        1        2       3      4      5               5         4         3        2         1         0
   &trans &none    &none     &kp F7  &kp F8 &kp F9 &kp F12            &none     &none     &none    &none     &kp PSCRN &none &trans
          &none    &none     &kp F4  &kp F5 &kp F6 &kp F11            &kp RGUI  &kp RCTRL &kp RALT &kp RSHFT &none     &none
          &none    &none     &kp F1  &kp F2 &kp F3 &kp F10            &none     &none     &none    &none     &none     &none
                                   &none &none &none              &none &none &none
                        >;
                };

                music_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
//         0        1        2            3          4             5            5         4         3        2         1         0
   &trans &none     &none    &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP  &none        &none     &none     &none    &none     &none     &none &trans
          &none     &none    &kp C_PREV   &kp C_PP   &kp C_NEXT    &none        &none     &none     &none    &none     &none     &none
          &none     &none    &none        &none      &kp C_BRI_DN  &kp C_BRI_UP &none     &none     &none    &none     &none     &none
                                   &none &none &none              &none &none &none
                        >;
                };
        };
};
